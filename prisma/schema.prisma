// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_DATABASE_URL")
}

model User {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  email       String      @unique
  password    String
  createdAt   DateTime    @default(now())
  transactions Transaction[]
  categories   Category[]
  budgets      Budget[]
}

model Transaction {
  id          String            @id @default(auto()) @map("_id") @db.ObjectId
  userId      String            @db.ObjectId
  categoryId  String            @db.ObjectId
  type        TransactionType   @default(expense)
  amount      Float
  date        DateTime          @default(now())
  description String?

  user        User              @relation(fields: [userId], references: [id])
  category    Category          @relation(fields: [categoryId], references: [id])
}

model Category {
  id          String            @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  userId      String            @db.ObjectId
  description String?
  createdAt   DateTime          @default(now())

  user        User              @relation(fields: [userId], references: [id])
  transactions Transaction[]
  budgets      Budget[]
}

model Budget {
  id          String            @id @default(auto()) @map("_id") @db.ObjectId
  userId      String            @db.ObjectId
  categoryId  String            @db.ObjectId
  amount      Float
  startDate   DateTime
  endDate     DateTime
  createdAt   DateTime          @default(now())

  user        User              @relation(fields: [userId], references: [id])
  category    Category          @relation(fields: [categoryId], references: [id])
}

enum TransactionType {
  income
  expense
}
